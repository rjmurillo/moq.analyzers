namespace DataTransferContracts;

public class Benchmark
{
    public string? DisplayInfo { get; set; }

    public object? Namespace { get; set; }

    public string? Type { get; set; }

    public string? Method { get; set; }

    public string? MethodTitle { get; set; }

    public string? Parameters { get; set; }

    public string? FullName { get; set; }

    public Statistics? Statistics { get; set; }

    public Memory? Memory { get; set; }

    public IEnumerable<Measurement>? Measurements { get; set; }

    /// <summary>
    /// this method was not auto-generated by a tool, it was added manually.
    /// </summary>
    /// <returns>an array of the actual workload results (not warmup, not pilot).</returns>
    internal double[] GetOriginalValues()
        => (Measurements ?? [])
            .Where(measurement => string.Equals(measurement.IterationStage, "Result", StringComparison.Ordinal))
            .Select(measurement => measurement.Nanoseconds / measurement.Operations)
            .ToArray();
}

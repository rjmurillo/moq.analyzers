name: Main build

on:
  workflow_dispatch:
    inputs:
      run_performance:
        description: 'Run performance job? (true/false)'
        required: false
        default: false
        type: boolean
      force_baseline:
        description: 'Force running baseline benchmarks even if cached (true/false)'
        required: false
        default: false
        type: boolean
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  merge_group:
    branches:
      - main
  workflow_call: # Allow to be called from the release workflow
  schedule:
    - cron: '0 3 * * *' # Nightly run for performance validation

permissions:
  security-events: write  # required for CodeQL
  packages: read
  contents: read
  actions: read

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-11-arm, ubuntu-24.04-arm]

    runs-on: ${{ matrix.os }}

    env:
      IS_CODACY_COVERAGE_ALLOWED: ${{ secrets.CODACY_PROJECT_TOKEN != '' }}
      IS_QLTY_COVERAGE_ALLOWED: ${{ secrets.QLTY_COVERAGE_TOKEN != '' }}
      RUN_FULL_PERF: ${{ (github.event_name == 'schedule'  && github.ref == 'refs/heads/main') || (github.event_name == 'workflow_dispatch' && github.event.inputs.run_performance == 'true') }}
      FORCE_PERF_BASELINE: ${{ github.event.inputs.force_baseline }}

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup, Restore, and Build Solution
      uses: ./.github/actions/setup-restore-build

    - name: Test
      run: dotnet test --no-build --configuration Release --settings ./build/targets/tests/test.runsettings

    - name: Upload binlogs
      uses: actions/upload-artifact@v4
      if: success() || failure()
      with:
        name: binlogs-${{ matrix.os }}
        path: ./artifacts/logs
        if-no-files-found: error

    - name: Upload *.received.* files
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: verify-test-results
        path: |
          **/*.received.*

    - name: Upload SARIF files
      uses: actions/upload-artifact@v4
      if: success() || failure()
      with:
        name: SARIF files (${{ matrix.os }})
        path: ./artifacts/obj/**/*.sarif

    - name: Upload Test Report
      uses: actions/upload-artifact@v4
      if: success() || failure()
      with:
        name: .NET Test Reports (${{ matrix.os }})
        path: "artifacts/TestResults/**/*.trx"
        if-no-files-found: error

    - name: Upload Code Coverage Report
      uses: actions/upload-artifact@v4
      if: success() || failure()
      with:
        name: .NET Code Coverage Reports (${{ matrix.os }})
        path: "artifacts/TestResults/coverage/**"

    - name: Publish coverage summary to GitHub
      run: cat artifacts/TestResults/coverage/SummaryGithub.md >> $GITHUB_STEP_SUMMARY
      shell: bash

    - name: Upload coverage data to Codacy
      if: ${{ runner.os == 'Linux' && env.IS_CODACY_COVERAGE_ALLOWED == 'true' }}
      uses: codacy/codacy-coverage-reporter-action@v1.3.0
      with:
        project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
        coverage-reports: ${{ github.workspace }}/artifacts/TestResults/coverage/Cobertura.xml

    - name: Upload coverage data to Qlty
      if: ${{ runner.os == 'Linux' && env.IS_QLTY_COVERAGE_ALLOWED == 'true' }}
      uses: qltysh/qlty-action/coverage@v1
      with:
        token: ${{ secrets.QLTY_COVERAGE_TOKEN }}
        files: ${{ github.workspace }}/artifacts/TestResults/coverage/Cobertura.xml

    - name: Upload packages
      uses: actions/upload-artifact@v4
      with:
        name: packages-${{ matrix.os }}
        path: |
          ./artifacts/package
        if-no-files-found: error

    - name: Get baseline SHA
      id: get-baseline-sha
      run: |
        if (-not (Test-Path build/perf/baseline.json)) {
          Write-Error "baseline.json not found â€“ aborting performance job."
          exit 1
        }
        $baseline = Get-Content build/perf/baseline.json | ConvertFrom-Json
        echo "sha=$($baseline.sha)" >> $env:GITHUB_OUTPUT
      shell: pwsh

    - name: Get performance test filter
      id: get-perf-filter
      run: |
        if ('${{ env.RUN_FULL_PERF }}' -eq 'true') {
          echo "filter='*'" >> $env:GITHUB_OUTPUT
        } else {
          echo "filter='*Baseline'" >> $env:GITHUB_OUTPUT
        }
      shell: pwsh

    - name: Download baseline performance cache
      id: restore-baseline-cache
      uses: actions/cache/restore@v4
      if: success() && (env.FORCE_PERF_BASELINE == '' || env.FORCE_PERF_BASELINE == 'false') && (env.RUN_FULL_PERF == 'false')
      with:
        path: ./artifacts/performance/perfResults/baseline
        key: baseline-performance-${{ matrix.os }}-${{ steps.get-baseline-sha.outputs.sha }}

    - name: Validate performance
      shell: pwsh
      run: ${{ github.workspace }}/build/scripts/perf/PerfCore.ps1 -v diag -diff -ci -filter ${{ steps.get-perf-filter.outputs.filter }}

    - name: Publish baseline performance summaries to GitHub
      if: success() || failure()
      shell: pwsh
      run: |
        $resultsDir = "artifacts/performance/perfResults/baseline/results"
        if (Test-Path $resultsDir) {
          Add-Content -Path $env:GITHUB_STEP_SUMMARY -Value "### Baseline Performance Results"
          $files = Get-ChildItem -Path $resultsDir -Filter "*-report-github.md" | Sort-Object Name
          foreach ($file in $files) {
            Get-Content $file.FullName | Out-File -Append -FilePath $env:GITHUB_STEP_SUMMARY
          }
          Add-Content -Path $env:GITHUB_STEP_SUMMARY -Value "---"
        }

    - name: Publish performance summaries to GitHub
      if: success() || failure()
      shell: pwsh
      run: |
        $resultsDir = "artifacts/performance/perfResults/perfTest/results"
        if (Test-Path $resultsDir) {
          Add-Content -Path $env:GITHUB_STEP_SUMMARY -Value "### Current Performance Results"
          $files = Get-ChildItem -Path $resultsDir -Filter "*-report-github.md" | Sort-Object Name
          foreach ($file in $files) {
            Get-Content $file.FullName | Out-File -Append -FilePath $env:GITHUB_STEP_SUMMARY
          }
          Add-Content -Path $env:GITHUB_STEP_SUMMARY -Value "---"
        }

    - name: Upload performance files
      uses: actions/upload-artifact@v4
      if: success() || failure()
      with:
        name: performance-${{ matrix.os }}
        path: |
          ./artifacts/performance/**

    - name: Upload baseline performance cache
      if: success() && (steps.restore-baseline-cache.outputs.cache-hit != 'true' || env.FORCE_PERF_BASELINE == 'true')
      uses: actions/cache/save@v4
      with:
        path: ./artifacts/performance/perfResults/baseline
        key: baseline-performance-${{ matrix.os }}-${{ steps.get-baseline-sha.outputs.sha }}
